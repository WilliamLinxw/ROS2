[0.000000] (-) TimerEvent: {}
[0.000630] (-) JobUnselected: {'identifier': 'my_package'}
[0.001420] (-) JobUnselected: {'identifier': 'py_pubsub'}
[0.001549] (-) JobUnselected: {'identifier': 'turtlesim'}
[0.001742] (cpp_pubsub) JobQueued: {'identifier': 'cpp_pubsub', 'dependencies': OrderedDict()}
[0.001784] (cpp_pubsub) JobStarted: {'identifier': 'cpp_pubsub'}
[0.019978] (cpp_pubsub) JobProgress: {'identifier': 'cpp_pubsub', 'progress': 'cmake'}
[0.028537] (cpp_pubsub) JobProgress: {'identifier': 'cpp_pubsub', 'progress': 'build'}
[0.030832] (cpp_pubsub) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/caesar/Desktop/ROS2/dev_ws/build/cpp_pubsub', '--', '-j4', '-l4'], 'cwd': '/home/caesar/Desktop/ROS2/dev_ws/build/cpp_pubsub', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'caesar'), ('LC_TIME', 'zh_CN.UTF-8'), ('TEXTDOMAIN', 'im-config'), ('OSPL_INFOFILE', '<stdout>'), ('XDG_SEAT', 'seat0'), ('SSH_AGENT_PID', '2298'), ('XDG_SESSION_TYPE', 'x11'), ('LD_LIBRARY_PATH', '/opt/ros/dashing/opt/yaml_cpp_vendor/lib:/opt/ros/dashing/opt/rviz_ogre_vendor/lib:/usr/lib:/opt/ros/dashing/lib'), ('SHLVL', '1'), ('OSPL_URI', 'file:///opt/ros/dashing/share/opensplice_cmake_module/config/ros_ospl.xml'), ('QT4_IM_MODULE', 'fcitx'), ('HOME', '/home/caesar'), ('DESKTOP_SESSION', 'ubuntu'), ('OSPL_VERBOSITY', '2'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('ROS_PYTHON_VERSION', '3'), ('LC_MONETARY', 'zh_CN.UTF-8'), ('MANAGERPID', '2118'), ('DBUS_STARTER_BUS_TYPE', 'session'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus,guid=dab9a5761261c12251d1b0ec6077df70'), ('OSPL_TMPL_PATH', '/usr/etc/opensplice/idlpp'), ('COLORTERM', 'truecolor'), ('_colcon_cd_root', '/home/caesar/ros2_install'), ('MANDATORY_PATH', '/usr/share/gconf/ubuntu.mandatory.path'), ('COLCON_PREFIX_PATH', '/home/caesar/Desktop/ROS2/dev_ws/install'), ('IM_CONFIG_PHASE', '2'), ('ROS_DISTRO', 'dashing'), ('LOGNAME', 'caesar'), ('GTK_IM_MODULE', 'fcitx'), ('JOURNAL_STREAM', '9:36037'), ('_', '/usr/bin/colcon'), ('DEFAULTS_PATH', '/usr/share/gconf/ubuntu.default.path'), ('ROS_VERSION', '2'), ('USERNAME', 'caesar'), ('XDG_SESSION_ID', '2'), ('TERM', 'xterm-256color'), ('OSPL_ERRORFILE', '<stderr>'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/dashing/bin:/home/caesar/.local/share/umake/bin:/home/caesar/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('INVOCATION_ID', '692f442faf444e53aa78e1d207ec2d0a'), ('SESSION_MANAGER', 'local/HP:@/tmp/.ICE-unix/2194,unix/HP:/tmp/.ICE-unix/2194'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/d7f34342_c86e_4344_b4ba_8ec00d330094'), ('LC_ADDRESS', 'zh_CN.UTF-8'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('OSPL_HOME', '/usr'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'zh_CN.UTF-8'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XMODIFIERS', '@im=fcitx'), ('GNOME_TERMINAL_SERVICE', ':1.273'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('AMENT_PREFIX_PATH', '/home/caesar/Desktop/ROS2/dev_ws/install/cpp_pubsub:/opt/ros/dashing'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('LC_NAME', 'zh_CN.UTF-8'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'zh_CN.UTF-8'), ('TEXTDOMAINDIR', '/usr/share/locale/'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('LC_IDENTIFICATION', 'zh_CN.UTF-8'), ('XDG_VTNR', '2'), ('QT_IM_MODULE', 'fcitx'), ('LC_ALL', 'en_US.UTF-8'), ('PWD', '/home/caesar/Desktop/ROS2/dev_ws/build/cpp_pubsub'), ('CLUTTER_IM_MODULE', 'xim'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/'), ('DBUS_STARTER_ADDRESS', 'unix:path=/run/user/1000/bus,guid=dab9a5761261c12251d1b0ec6077df70'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('LC_NUMERIC', 'zh_CN.UTF-8'), ('PYTHONPATH', '/opt/ros/dashing/lib/python3.6/site-packages'), ('LC_PAPER', 'zh_CN.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '5202'), ('CMAKE_PREFIX_PATH', '/home/caesar/Desktop/ROS2/dev_ws/install/cpp_pubsub:/opt/ros/dashing')]), 'shell': False}
[0.099128] (-) TimerEvent: {}
[0.121842] (cpp_pubsub) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target listener\x1b[0m\n'}
[0.122190] (cpp_pubsub) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target talker\x1b[0m\n'}
[0.147119] (cpp_pubsub) StdoutLine: {'line': b'[ 25%] \x1b[32mBuilding CXX object CMakeFiles/talker.dir/src/publisher_member_function.cpp.o\x1b[0m\n'}
[0.147435] (cpp_pubsub) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/listener.dir/src/subscriber_member_function.cpp.o\x1b[0m\n'}
[0.199230] (-) TimerEvent: {}
[0.299550] (-) TimerEvent: {}
[0.399917] (-) TimerEvent: {}
[0.500288] (-) TimerEvent: {}
[0.600697] (-) TimerEvent: {}
[0.701028] (-) TimerEvent: {}
[0.801350] (-) TimerEvent: {}
[0.901702] (-) TimerEvent: {}
[1.002026] (-) TimerEvent: {}
[1.102373] (-) TimerEvent: {}
[1.171698] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:24:80:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KConstPtr\x1b[m\x1b[K\xe2\x80\x99 is deprecated [\x1b[01;35m\x1b[K-Wdeprecated-declarations\x1b[m\x1b[K]\n'}
[1.171916] (cpp_pubsub) StderrLine: {'line': b'     void topic_callback(const std_msgs::msg::Float64MultiArray::ConstPtr& msg) \x1b[01;35m\x1b[Kconst\x1b[m\x1b[K\n'}
[1.172016] (cpp_pubsub) StderrLine: {'line': b'                                                                                \x1b[01;35m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.184010] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:28:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KConstPtr\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::Subscription<std_msgs::msg::Float64MultiArray_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[1.184307] (cpp_pubsub) StderrLine: {'line': b'     rclcpp::Subscription<std_msgs::msg::Float64MultiArray>::\x1b[01;31m\x1b[KConstPtr\x1b[m\x1b[K& subscription_;\n'}
[1.184441] (cpp_pubsub) StderrLine: {'line': b'                                                             \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.184536] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KMinimalSubscriber::MinimalSubscriber()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.184648] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:19:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ksubscription_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[1.184736] (cpp_pubsub) StderrLine: {'line': b'       \x1b[01;31m\x1b[Ksubscription_\x1b[m\x1b[K = this->create_subscription<std_msgs::msg::Float64MultiArray>(\n'}
[1.184820] (cpp_pubsub) StderrLine: {'line': b'       \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.186738] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:19:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternative: \xe2\x80\x98\x1b[01m\x1b[Krcl_subscription_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.186901] (cpp_pubsub) StderrLine: {'line': b'       \x1b[01;36m\x1b[Ksubscription_\x1b[m\x1b[K = this->create_subscription<std_msgs::msg::Float64MultiArray>(\n'}
[1.186998] (cpp_pubsub) StderrLine: {'line': b'       \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.187181] (cpp_pubsub) StderrLine: {'line': b'       \x1b[32m\x1b[Krcl_subscription_t\x1b[m\x1b[K\n'}
[1.198385] (cpp_pubsub) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/7/ext/alloc_traits.h:36:0\x1b[m\x1b[K,\n'}
[1.198590] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/7/bits/basic_string.h:40\x1b[m\x1b[K,\n'}
[1.198687] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/7/string:52\x1b[m\x1b[K,\n'}
[1.198775] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/7/stdexcept:39\x1b[m\x1b[K,\n'}
[1.198858] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/7/array:39\x1b[m\x1b[K,\n'}
[1.198941] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/7/tuple:39\x1b[m\x1b[K,\n'}
[1.199022] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/7/functional:54\x1b[m\x1b[K,\n'}
[1.199103] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:2\x1b[m\x1b[K:\n'}
[1.199188] (cpp_pubsub) StderrLine: {'line': b'/usr/include/c++/7/bits/alloc_traits.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct std::allocator_traits<std::allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&> >\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.199271] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/message_memory_strategy.hpp:46:67:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.199356] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/node_impl.hpp:115:1:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class SubscriptionT> std::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr) [with MessageT = std_msgs::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.199464] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:20:75:\x1b[m\x1b[K   required from here\n'}
[1.199560] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/alloc_traits.h:392:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.199646] (cpp_pubsub) StderrLine: {'line': b'       using pointer = _Tp*\x1b[01;31m\x1b[K;\x1b[m\x1b[K\n'}
[1.199727] (cpp_pubsub) StderrLine: {'line': b'                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.199809] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/alloc_traits.h:395:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.199891] (cpp_pubsub) StderrLine: {'line': b'       using const_pointer = const _Tp*\x1b[01;31m\x1b[K;\x1b[m\x1b[K\n'}
[1.199971] (cpp_pubsub) StderrLine: {'line': b'                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.201708] (cpp_pubsub) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/7/memory:80:0\x1b[m\x1b[K,\n'}
[1.201864] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:3\x1b[m\x1b[K:\n'}
[1.201961] (cpp_pubsub) StderrLine: {'line': b'/usr/include/c++/7/bits/unique_ptr.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct std::default_delete<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.202055] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/message_memory_strategy.hpp:135:18:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.202146] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/node_impl.hpp:115:1:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class SubscriptionT> std::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr) [with MessageT = std_msgs::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.202241] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:20:75:\x1b[m\x1b[K   required from here\n'}
[1.202324] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/unique_ptr.h:68:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.202406] (-) TimerEvent: {}
[1.202523] (cpp_pubsub) StderrLine: {'line': b'         \x1b[01;31m\x1b[Kdefault_delete\x1b[m\x1b[K(const default_delete<_Up>&) noexcept { }\n'}
[1.202627] (cpp_pubsub) StderrLine: {'line': b'         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.202711] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/unique_ptr.h:72:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.202796] (cpp_pubsub) StderrLine: {'line': b'       \x1b[01;31m\x1b[Koperator\x1b[m\x1b[K()(_Tp* __ptr) const\n'}
[1.202877] (cpp_pubsub) StderrLine: {'line': b'       \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.219269] (cpp_pubsub) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/client.hpp:39:0\x1b[m\x1b[K,\n'}
[1.219457] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/callback_group.hpp:23\x1b[m\x1b[K,\n'}
[1.219562] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.219651] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/memory_strategy.hpp:24\x1b[m\x1b[K,\n'}
[1.219755] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.219955] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executor.hpp:33\x1b[m\x1b[K,\n'}
[1.220043] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executors/multi_threaded_executor.hpp:24\x1b[m\x1b[K,\n'}
[1.220131] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.220229] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[1.220318] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:7\x1b[m\x1b[K:\n'}
[1.220499] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid MinimalSubscriber::topic_callback(const ConstPtr&) const\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.220600] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:26:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kconst _data_type {aka const class std::vector<double>}\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kc_str\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.220687] (cpp_pubsub) StderrLine: {'line': b'         RCLCPP_INFO(this->get_logger(), "I heard: \'%s\'", msg->data.\x1b[01;31m\x1b[Kc\x1b[m\x1b[K_str());\n'}
[1.220769] (cpp_pubsub) StderrLine: {'line': b'                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.220851] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rcutils/logging_macros.h:72:64:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin definition of macro \xe2\x80\x98\x1b[01m\x1b[KRCUTILS_LOG_COND_NAMED\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.220936] (cpp_pubsub) StderrLine: {'line': b'       rcutils_log(&__rcutils_logging_location, severity, name, \x1b[01;36m\x1b[K__VA_ARGS__\x1b[m\x1b[K); \\\n'}
[1.221018] (cpp_pubsub) StderrLine: {'line': b'                                                                \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.221099] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/logging.hpp:218:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KRCUTILS_LOG_INFO_NAMED\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.221185] (cpp_pubsub) StderrLine: {'line': b'     \x1b[01;36m\x1b[KRCUTILS_LOG_INFO_NAMED\x1b[m\x1b[K( \\\n'}
[1.221264] (cpp_pubsub) StderrLine: {'line': b'     \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.221344] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/logging.hpp:221:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KRCLCPP_ALL_BUT_FIRST_ARGS\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.221427] (cpp_pubsub) StderrLine: {'line': b'         \x1b[01;36m\x1b[KRCLCPP_ALL_BUT_FIRST_ARGS\x1b[m\x1b[K(__VA_ARGS__,"")); \\\n'}
[1.221511] (cpp_pubsub) StderrLine: {'line': b'         \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.221592] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:26:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KRCLCPP_INFO\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.221682] (cpp_pubsub) StderrLine: {'line': b'         \x1b[01;36m\x1b[KRCLCPP_INFO\x1b[m\x1b[K(this->get_logger(), "I heard: \'%s\'", msg->data.c_str());\n'}
[1.221763] (cpp_pubsub) StderrLine: {'line': b'         \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.302521] (-) TimerEvent: {}
[1.351957] (cpp_pubsub) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/subscription_base.hpp:28:0\x1b[m\x1b[K,\n'}
[1.352235] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/intra_process_manager_impl.hpp:38\x1b[m\x1b[K,\n'}
[1.352385] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/intra_process_manager.hpp:32\x1b[m\x1b[K,\n'}
[1.352521] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/publisher.hpp:35\x1b[m\x1b[K,\n'}
[1.352654] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[1.352785] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.352915] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/memory_strategy.hpp:24\x1b[m\x1b[K,\n'}
[1.353045] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.353255] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executor.hpp:33\x1b[m\x1b[K,\n'}
[1.353387] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executors/multi_threaded_executor.hpp:24\x1b[m\x1b[K,\n'}
[1.353517] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.353644] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[1.353772] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:7\x1b[m\x1b[K:\n'}
[1.353920] (cpp_pubsub) StderrLine: {'line': b'/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::AnySubscriptionCallback<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.354053] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/subscription_factory.hpp:92:52:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionEventCallbacks&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr, std::shared_ptr<PublisherT>) [with MessageT = std_msgs::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&) const>; Alloc = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> >; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.354204] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/create_subscription.hpp:115:71:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr) [with MessageT = std_msgs::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&) const>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> >; NodeT = rclcpp::Node&; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.354340] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/node_impl.hpp:124:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr) [with MessageT = std_msgs::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> >; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.354481] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:20:75:\x1b[m\x1b[K   required from here\n'}
[1.354610] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:108:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const _Tp>)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99 cannot be overloaded\n'}
[1.354759] (cpp_pubsub) StderrLine: {'line': b'   void \x1b[01;31m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[1.354999] (cpp_pubsub) StderrLine: {'line': b'        \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.355406] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:80:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kwith \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.355515] (cpp_pubsub) StderrLine: {'line': b'   void \x1b[01;31m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[1.355601] (cpp_pubsub) StderrLine: {'line': b'        \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.355684] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:122:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>, const rmw_message_info_t&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const _Tp>, const rmw_message_info_t&)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99 cannot be overloaded\n'}
[1.355773] (cpp_pubsub) StderrLine: {'line': b'   void \x1b[01;31m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[1.355852] (cpp_pubsub) StderrLine: {'line': b'        \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.355931] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:94:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kwith \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>, const rmw_message_info_t&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>, const rmw_message_info_t&)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.356022] (cpp_pubsub) StderrLine: {'line': b'   void \x1b[01;31m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[1.356100] (cpp_pubsub) StderrLine: {'line': b'        \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.356191] (cpp_pubsub) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/node_interfaces/node_topics_interface.hpp:29:0\x1b[m\x1b[K,\n'}
[1.356278] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/node.hpp:53\x1b[m\x1b[K,\n'}
[1.356358] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[1.356435] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[1.356516] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[1.356606] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:7\x1b[m\x1b[K:\n'}
[1.356680] (cpp_pubsub) StderrLine: {'line': b'/opt/ros/dashing/include/rclcpp/subscription_factory.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionEventCallbacks&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr, std::shared_ptr<PublisherT>) [with MessageT = std_msgs::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&) const>; Alloc = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> >; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.356773] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/create_subscription.hpp:115:71:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr) [with MessageT = std_msgs::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&) const>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> >; NodeT = rclcpp::Node&; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.356858] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/node_impl.hpp:124:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr) [with MessageT = std_msgs::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> >; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.356946] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:20:75:\x1b[m\x1b[K   required from here\n'}
[1.357024] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/subscription_factory.hpp:93:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> >::set(std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&) const>)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.357104] (cpp_pubsub) StderrLine: {'line': b'   \x1b[01;31m\x1b[Kany_subscription_callback\x1b[m\x1b[K.set(std::forward<CallbackT>(callback));\n'}
[1.357179] (cpp_pubsub) StderrLine: {'line': b'   \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.357253] (cpp_pubsub) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/subscription_base.hpp:28:0\x1b[m\x1b[K,\n'}
[1.357328] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/intra_process_manager_impl.hpp:38\x1b[m\x1b[K,\n'}
[1.357404] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/intra_process_manager.hpp:32\x1b[m\x1b[K,\n'}
[1.357485] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/publisher.hpp:35\x1b[m\x1b[K,\n'}
[1.357573] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[1.357651] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.357730] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/memory_strategy.hpp:24\x1b[m\x1b[K,\n'}
[1.357807] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.357882] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executor.hpp:33\x1b[m\x1b[K,\n'}
[1.357959] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executors/multi_threaded_executor.hpp:24\x1b[m\x1b[K,\n'}
[1.358036] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.358113] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[1.358194] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:7\x1b[m\x1b[K:\n'}
[1.358272] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:80:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; Alloc = std::allocator<void>]\n'}
[1.358357] (cpp_pubsub) StderrLine: {'line': b'   void \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[1.358434] (cpp_pubsub) StderrLine: {'line': b'        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.358511] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:80:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.358588] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:78:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.358668] (cpp_pubsub) StderrLine: {'line': b'     >::type * = \x1b[01;31m\x1b[Knullptr\x1b[m\x1b[K\n'}
[1.358745] (cpp_pubsub) StderrLine: {'line': b'                 \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[1.358822] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:78:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kinvalid template non-type parameter\n'}
[1.358899] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:94:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>, const rmw_message_info_t&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>, const rmw_message_info_t&)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; Alloc = std::allocator<void>]\n'}
[1.358985] (cpp_pubsub) StderrLine: {'line': b'   void \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[1.359064] (cpp_pubsub) StderrLine: {'line': b'        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.359140] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:94:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.359223] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:92:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.359302] (cpp_pubsub) StderrLine: {'line': b'     >::type * = \x1b[01;31m\x1b[Knullptr\x1b[m\x1b[K\n'}
[1.359378] (cpp_pubsub) StderrLine: {'line': b'                 \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[1.359458] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:92:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kinvalid template non-type parameter\n'}
[1.359536] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:136:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::unique_ptr<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::default_delete<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&> >)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<T>::allocator_type>::rebind_alloc<T>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<T>::allocator_type> >::type>)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; Alloc = std::allocator<void>]\n'}
[1.359640] (cpp_pubsub) StderrLine: {'line': b'   void \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[1.359716] (cpp_pubsub) StderrLine: {'line': b'        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.359790] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:136:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.359864] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:134:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.359939] (cpp_pubsub) StderrLine: {'line': b'     >::type * = \x1b[01;31m\x1b[Knullptr\x1b[m\x1b[K\n'}
[1.360012] (cpp_pubsub) StderrLine: {'line': b'                 \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[1.360088] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:134:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kinvalid template non-type parameter\n'}
[1.360337] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:150:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::unique_ptr<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::default_delete<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&> >, const rmw_message_info_t&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<T>::allocator_type>::rebind_alloc<T>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<T>::allocator_type> >::type>, const rmw_message_info_t&)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; Alloc = std::allocator<void>]\n'}
[1.360448] (cpp_pubsub) StderrLine: {'line': b'   void \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[1.360527] (cpp_pubsub) StderrLine: {'line': b'        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.360619] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:150:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.360698] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:148:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.360776] (cpp_pubsub) StderrLine: {'line': b'     >::type * = \x1b[01;31m\x1b[Knullptr\x1b[m\x1b[K\n'}
[1.360852] (cpp_pubsub) StderrLine: {'line': b'                 \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[1.360929] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:148:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kinvalid template non-type parameter\n'}
[1.402703] (-) TimerEvent: {}
[1.448834] (cpp_pubsub) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0\x1b[m\x1b[K,\n'}
[1.449243] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/7/bits/allocator.h:46\x1b[m\x1b[K,\n'}
[1.449389] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/7/string:41\x1b[m\x1b[K,\n'}
[1.449481] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/7/stdexcept:39\x1b[m\x1b[K,\n'}
[1.449567] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/7/array:39\x1b[m\x1b[K,\n'}
[1.449650] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/7/tuple:39\x1b[m\x1b[K,\n'}
[1.449742] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/7/functional:54\x1b[m\x1b[K,\n'}
[1.449824] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:2\x1b[m\x1b[K:\n'}
[1.449905] (cpp_pubsub) StderrLine: {'line': b'/usr/include/c++/7/ext/new_allocator.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass __gnu_cxx::new_allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.449997] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/allocator.h:108:11:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.450079] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1355:63:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> struct std::__shared_ptr<std::allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<_Yp, std::__void_t<decltype (__enable_shared_from_this_base(declval<const std::__shared_count<(__gnu_cxx::_Lock_policy)2>&>(), declval<_Yp*>()))> > [with _Yp = std::allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.450165] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1377:21:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Yp2> typename std::enable_if<(! std::__shared_ptr<std::allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<_Yp2, void>::value), void>::type std::__shared_ptr<std::allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<_Yp, _Yp2>(_Yp*) [with _Yp = std::allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>; _Yp2 = std::allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.450258] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1301:35:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<std::allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&> >; _Args = {std::allocator<void>&}; _Tp = std::allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.450348] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr.h:344:64:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<std::allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&> >; _Args = {std::allocator<void>&}; _Tp = std::allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.450433] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr.h:690:14:\x1b[m\x1b[K   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n'}
[1.450523] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr.h:690:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> >; _Alloc = std::allocator<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> > >; _Args = {std::shared_ptr<std::allocator<void> >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.450610] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr.h:706:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> >; _Args = {std::shared_ptr<std::allocator<void> >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.450697] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/message_memory_strategy.hpp:79:68:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::SharedPtr rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::create_default() [with MessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; Alloc = std::allocator<void>; rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.450785] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/create_subscription.hpp:107:88:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr) [with MessageT = std_msgs::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&) const>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> >; NodeT = rclcpp::Node&; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.450881] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/node_impl.hpp:124:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr) [with MessageT = std_msgs::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> >; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.450976] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:20:75:\x1b[m\x1b[K   required from here\n'}
[1.451058] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/ext/new_allocator.h:63:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.451142] (cpp_pubsub) StderrLine: {'line': b'       typedef _Tp*       \x1b[01;31m\x1b[Kpointer\x1b[m\x1b[K;\n'}
[1.451224] (cpp_pubsub) StderrLine: {'line': b'                          \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[1.451305] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/ext/new_allocator.h:64:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.451386] (cpp_pubsub) StderrLine: {'line': b'       typedef const _Tp* \x1b[01;31m\x1b[Kconst_pointer\x1b[m\x1b[K;\n'}
[1.451471] (cpp_pubsub) StderrLine: {'line': b'                          \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.451551] (cpp_pubsub) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/7/string:41:0\x1b[m\x1b[K,\n'}
[1.451631] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/7/stdexcept:39\x1b[m\x1b[K,\n'}
[1.451713] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/7/array:39\x1b[m\x1b[K,\n'}
[1.451793] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/7/tuple:39\x1b[m\x1b[K,\n'}
[1.451880] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/7/functional:54\x1b[m\x1b[K,\n'}
[1.451960] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:2\x1b[m\x1b[K:\n'}
[1.452041] (cpp_pubsub) StderrLine: {'line': b'/usr/include/c++/7/bits/allocator.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass std::allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.452122] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1355:63:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> struct std::__shared_ptr<std::allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<_Yp, std::__void_t<decltype (__enable_shared_from_this_base(declval<const std::__shared_count<(__gnu_cxx::_Lock_policy)2>&>(), declval<_Yp*>()))> > [with _Yp = std::allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.452281] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1377:21:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Yp2> typename std::enable_if<(! std::__shared_ptr<std::allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<_Yp2, void>::value), void>::type std::__shared_ptr<std::allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<_Yp, _Yp2>(_Yp*) [with _Yp = std::allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>; _Yp2 = std::allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.452371] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1301:35:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<std::allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&> >; _Args = {std::allocator<void>&}; _Tp = std::allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.452461] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr.h:344:64:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<std::allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&> >; _Args = {std::allocator<void>&}; _Tp = std::allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.452546] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr.h:690:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = std::allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>; _Alloc = std::allocator<std::allocator<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&> >; _Args = {std::allocator<void>&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.452634] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr.h:706:39:\x1b[m\x1b[K   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n'}
[1.452716] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr.h:690:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> >; _Alloc = std::allocator<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> > >; _Args = {std::shared_ptr<std::allocator<void> >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.452804] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr.h:706:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> >; _Args = {std::shared_ptr<std::allocator<void> >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.452891] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/message_memory_strategy.hpp:79:68:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::SharedPtr rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::create_default() [with MessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; Alloc = std::allocator<void>; rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.452984] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/create_subscription.hpp:107:88:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr) [with MessageT = std_msgs::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&) const>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> >; NodeT = rclcpp::Node&; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.453082] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/node_impl.hpp:124:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr) [with MessageT = std_msgs::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> >; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.453174] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:20:75:\x1b[m\x1b[K   required from here\n'}
[1.453257] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/allocator.h:113:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.453345] (cpp_pubsub) StderrLine: {'line': b'       typedef _Tp*       \x1b[01;31m\x1b[Kpointer\x1b[m\x1b[K;\n'}
[1.453429] (cpp_pubsub) StderrLine: {'line': b'                          \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[1.453604] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/allocator.h:114:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.453695] (cpp_pubsub) StderrLine: {'line': b'       typedef const _Tp* \x1b[01;31m\x1b[Kconst_pointer\x1b[m\x1b[K;\n'}
[1.453777] (cpp_pubsub) StderrLine: {'line': b'                          \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.467832] (cpp_pubsub) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr.h:52:0\x1b[m\x1b[K,\n'}
[1.468255] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/7/memory:81\x1b[m\x1b[K,\n'}
[1.468505] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:3\x1b[m\x1b[K:\n'}
[1.468627] (cpp_pubsub) StderrLine: {'line': b'/usr/include/c++/7/bits/shared_ptr_base.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass std::__shared_ptr_access<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, (__gnu_cxx::_Lock_policy)2, false, false>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.468724] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1034:11:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::__shared_ptr<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, (__gnu_cxx::_Lock_policy)2>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.468810] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr.h:93:11:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::shared_ptr<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.468894] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/message_memory_strategy.hpp:84:37:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::borrow_message() [with MessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.469028] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:37:1:\x1b[m\x1b[K   required from here\n'}
[1.469116] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:966:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr_access<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, (__gnu_cxx::_Lock_policy)2, false, false>::element_type {aka const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&}\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.469205] (cpp_pubsub) StderrLine: {'line': b'       \x1b[01;31m\x1b[Koperator\x1b[m\x1b[K->() const noexcept\n'}
[1.469289] (cpp_pubsub) StderrLine: {'line': b'       \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.469373] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:974:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr_access<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, (__gnu_cxx::_Lock_policy)2, false, false>::element_type {aka const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&}\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.471456] (cpp_pubsub) StderrLine: {'line': b'       \x1b[01;31m\x1b[K_M_get\x1b[m\x1b[K() const noexcept\n'}
[1.471634] (cpp_pubsub) StderrLine: {'line': b'       \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.471839] (cpp_pubsub) StderrLine: {'line': b'/usr/include/c++/7/bits/shared_ptr_base.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass std::__shared_ptr<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, (__gnu_cxx::_Lock_policy)2>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.471932] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr.h:93:11:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::shared_ptr<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.472019] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/message_memory_strategy.hpp:84:37:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::borrow_message() [with MessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.472107] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:37:1:\x1b[m\x1b[K   required from here\n'}
[1.472209] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1049:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.472311] (cpp_pubsub) StderrLine: {'line': b'    enable_if<__sp_compatible_with<_Yp*, _Tp*>::value, _Res>::type\x1b[01;31m\x1b[K;\x1b[m\x1b[K\n'}
[1.472394] (cpp_pubsub) StderrLine: {'line': b'                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.472476] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1060:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.472562] (cpp_pubsub) StderrLine: {'line': b'    >::value, _Res>::type\x1b[01;31m\x1b[K;\x1b[m\x1b[K\n'}
[1.472643] (cpp_pubsub) StderrLine: {'line': b'                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.472726] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1116:2:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, (__gnu_cxx::_Lock_policy)2>::element_type {aka const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&}\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.472819] (cpp_pubsub) StderrLine: {'line': b'  \x1b[01;31m\x1b[K__shared_ptr\x1b[m\x1b[K(const __shared_ptr<_Yp, _Lp>& __r,\n'}
[1.472933] (cpp_pubsub) StderrLine: {'line': b'  \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.473021] (cpp_pubsub) StderrLine: {'line': b'/usr/include/c++/7/bits/shared_ptr_base.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, __gnu_cxx::_Lock_policy _Lp> template<class _Yp, class _Res> using _Compatible = typename std::enable_if<std::__sp_compatible_with<_Yp*, _Tp*>::value, _Res>::type [with _Yp = _Yp; _Res = void; _Tp = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.473108] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1126:2:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::__shared_ptr<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, (__gnu_cxx::_Lock_policy)2>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.473200] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr.h:93:11:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::shared_ptr<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.473282] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/message_memory_strategy.hpp:84:37:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::borrow_message() [with MessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.473365] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:37:1:\x1b[m\x1b[K   required from here\n'}
[1.473447] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1049:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.473529] (cpp_pubsub) StderrLine: {'line': b'    enable_if<__sp_compatible_with<_Yp*, _Tp*>::value, _Res>::type\x1b[01;31m\x1b[K;\x1b[m\x1b[K\n'}
[1.473612] (cpp_pubsub) StderrLine: {'line': b'                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.473694] (cpp_pubsub) StderrLine: {'line': b'/usr/include/c++/7/bits/shared_ptr_base.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, __gnu_cxx::_Lock_policy _Lp> template<class _Yp, class _Del, class _Res, class _Ptr> using _UniqCompatible = typename std::enable_if<std::__and_<std::__sp_compatible_with<_Yp*, _Tp*>, std::is_convertible<_Ptr, typename std::remove_extent<_Up>::type*> >::value, _Res>::type [with _Yp = _Yp; _Del = _Del; _Res = void; _Ptr = typename std::unique_ptr<_Tp, _Dp>::pointer; _Tp = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.473781] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1157:2:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::__shared_ptr<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, (__gnu_cxx::_Lock_policy)2>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.473870] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr.h:93:11:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::shared_ptr<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.473953] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/message_memory_strategy.hpp:84:37:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::borrow_message() [with MessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.474047] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:37:1:\x1b[m\x1b[K   required from here\n'}
[1.474129] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1060:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.474217] (cpp_pubsub) StderrLine: {'line': b'    >::value, _Res>::type\x1b[01;31m\x1b[K;\x1b[m\x1b[K\n'}
[1.474297] (cpp_pubsub) StderrLine: {'line': b'                         \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.474376] (cpp_pubsub) StderrLine: {'line': b'/usr/include/c++/7/bits/shared_ptr_base.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass std::__shared_ptr<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, (__gnu_cxx::_Lock_policy)2>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.474458] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr.h:93:11:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::shared_ptr<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.474539] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/message_memory_strategy.hpp:84:37:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::borrow_message() [with MessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.474628] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:37:1:\x1b[m\x1b[K   required from here\n'}
[1.474709] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1173:2:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.474794] (cpp_pubsub) StderrLine: {'line': b'  \x1b[01;31m\x1b[K__shared_ptr\x1b[m\x1b[K(unique_ptr<_Tp1, _Del>&& __r, __sp_array_delete)\n'}
[1.474875] (cpp_pubsub) StderrLine: {'line': b'  \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.474960] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1172:33:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.475044] (cpp_pubsub) StderrLine: {'line': b'         >::value, bool>::type = \x1b[01;31m\x1b[Ktrue\x1b[m\x1b[K>\n'}
[1.475126] (cpp_pubsub) StderrLine: {'line': b'                                 \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.475208] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1173:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kinvalid template non-type parameter\n'}
[1.475296] (cpp_pubsub) StderrLine: {'line': b'  \x1b[01;36m\x1b[K__shared_ptr\x1b[m\x1b[K(unique_ptr<_Tp1, _Del>&& __r, __sp_array_delete)\n'}
[1.475376] (cpp_pubsub) StderrLine: {'line': b'  \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.475456] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1257:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, (__gnu_cxx::_Lock_policy)2>::element_type {aka const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&}\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.475540] (cpp_pubsub) StderrLine: {'line': b'       \x1b[01;31m\x1b[Kget\x1b[m\x1b[K() const noexcept\n'}
[1.475621] (cpp_pubsub) StderrLine: {'line': b'       \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.475702] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1401:24:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, (__gnu_cxx::_Lock_policy)2>::element_type {aka const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&}\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.475811] (cpp_pubsub) StderrLine: {'line': b'       element_type*    \x1b[01;31m\x1b[K_M_ptr\x1b[m\x1b[K;         // Contained pointer.\n'}
[1.475893] (cpp_pubsub) StderrLine: {'line': b'                        \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.475973] (cpp_pubsub) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/7/memory:81:0\x1b[m\x1b[K,\n'}
[1.476053] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:3\x1b[m\x1b[K:\n'}
[1.476135] (cpp_pubsub) StderrLine: {'line': b'/usr/include/c++/7/bits/shared_ptr.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass std::shared_ptr<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.476233] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/message_memory_strategy.hpp:84:37:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::borrow_message() [with MessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.476325] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:37:1:\x1b[m\x1b[K   required from here\n'}
[1.476407] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr.h:224:2:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&>::element_type {aka const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&}\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.476493] (cpp_pubsub) StderrLine: {'line': b'  \x1b[01;31m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr<_Yp>& __r, element_type* __p) noexcept\n'}
[1.476574] (cpp_pubsub) StderrLine: {'line': b'  \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[1.480245] (cpp_pubsub) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr.h:52:0\x1b[m\x1b[K,\n'}
[1.480428] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/7/memory:81\x1b[m\x1b[K,\n'}
[1.480574] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:3\x1b[m\x1b[K:\n'}
[1.480666] (cpp_pubsub) StderrLine: {'line': b'/usr/include/c++/7/bits/shared_ptr_base.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kconstexpr std::__shared_ptr<_Tp, _Lp>::__shared_ptr() [with _Tp = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.480751] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1235:9:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid std::__shared_ptr<_Tp, _Lp>::reset() [with _Tp = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.480838] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/message_memory_strategy.hpp:126:5:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::return_message(std::shared_ptr<_Tp>&) [with MessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.480926] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:37:1:\x1b[m\x1b[K   required from here\n'}
[1.481013] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1073:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing invalid field \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<_Tp, _Lp>::_M_ptr\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.481098] (cpp_pubsub) StderrLine: {'line': b'       : _M_ptr(0), _M_refcount(\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[1.481179] (cpp_pubsub) StderrLine: {'line': b'                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.481259] (cpp_pubsub) StderrLine: {'line': b'/usr/include/c++/7/bits/shared_ptr_base.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid std::__shared_ptr<_Tp, _Lp>::swap(std::__shared_ptr<_Tp, _Lp>&) [with _Tp = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.481343] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1235:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid std::__shared_ptr<_Tp, _Lp>::reset() [with _Tp = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.481427] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/message_memory_strategy.hpp:126:5:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::return_message(std::shared_ptr<_Tp>&) [with MessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.481511] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:37:1:\x1b[m\x1b[K   required from here\n'}
[1.481593] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1274:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing invalid field \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<_Tp, _Lp>::_M_ptr\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.481675] (cpp_pubsub) StderrLine: {'line': b'  std::swap(\x1b[01;31m\x1b[K_M_ptr\x1b[m\x1b[K, __other._M_ptr);\n'}
[1.481756] (cpp_pubsub) StderrLine: {'line': b'            \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.481840] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1274:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass std::__shared_ptr<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, (__gnu_cxx::_Lock_policy)2>\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[K_M_ptr\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.481930] (cpp_pubsub) StderrLine: {'line': b'  std::swap(_M_ptr, \x1b[01;31m\x1b[K__other._M_ptr\x1b[m\x1b[K);\n'}
[1.482011] (cpp_pubsub) StderrLine: {'line': b'                    \x1b[01;31m\x1b[K~~~~~~~~^~~~~~\x1b[m\x1b[K\n'}
[1.488530] (cpp_pubsub) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/7/functional:58:0\x1b[m\x1b[K,\n'}
[1.488718] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/caesar/Desktop/ROS2/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:2\x1b[m\x1b[K:\n'}
[1.488824] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:\x1b[m\x1b[K At global scope:\n'}
[1.488912] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:541:2:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::_Requires<std::function<_Res(_ArgTypes ...)>::_Callable<typename std::decay<_U1>::type>, std::function<_Res(_ArgTypes ...)>&> std::function<_Res(_ArgTypes ...)>::operator=(_Functor&&) [with _Functor = rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionEventCallbacks&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr, std::shared_ptr<PublisherT>) [with MessageT = std_msgs::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&) const>; Alloc = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> >; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> > >]::<lambda(rclcpp::node_interfaces::NodeBaseInterface*, const string&, const rcl_subscription_options_t&)>; _Res = std::shared_ptr<rclcpp::SubscriptionBase>; _ArgTypes = {rclcpp::node_interfaces::NodeBaseInterface*, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rcl_subscription_options_t&}; std::function<_Res(_ArgTypes ...)>::_Requires<std::function<_Res(_ArgTypes ...)>::_Callable<typename std::decay<_U1>::type>, std::function<_Res(_ArgTypes ...)>&> = std::function<std::shared_ptr<rclcpp::SubscriptionBase>(rclcpp::node_interfaces::NodeBaseInterface*, const std::__cxx11::basic_string<char>&, const rcl_subscription_options_t&)>&]\x1b[m\x1b[K\xe2\x80\x99, declared using local type \xe2\x80\x98\x1b[01m\x1b[Krclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionEventCallbacks&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr, std::shared_ptr<PublisherT>) [with MessageT = std_msgs::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&) const>; Alloc = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> >; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const std_msgs::msg::Float64MultiArray_<std::allocator<void> > >&, std::allocator<void> > >]::<lambda(rclcpp::node_interfaces::NodeBaseInterface*, const string&, const rcl_subscription_options_t&)>\x1b[m\x1b[K\xe2\x80\x99, is used but never defined [\x1b[01;31m\x1b[K-fpermissive\x1b[m\x1b[K]\n'}
[1.489036] (cpp_pubsub) StderrLine: {'line': b'  \x1b[01;31m\x1b[Koperator\x1b[m\x1b[K=(_Functor&& __f)\n'}
[1.489120] (cpp_pubsub) StderrLine: {'line': b'  \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.502833] (-) TimerEvent: {}
[1.522719] (cpp_pubsub) StdoutLine: {'line': b"CMakeFiles/listener.dir/build.make:62: recipe for target 'CMakeFiles/listener.dir/src/subscriber_member_function.cpp.o' failed\n"}
[1.523126] (cpp_pubsub) StderrLine: {'line': b'make[2]: *** [CMakeFiles/listener.dir/src/subscriber_member_function.cpp.o] Error 1\n'}
[1.523256] (cpp_pubsub) StderrLine: {'line': b'make[1]: *** [CMakeFiles/listener.dir/all] Error 2\n'}
[1.523347] (cpp_pubsub) StderrLine: {'line': b'make[1]: *** Waiting for unfinished jobs....\n'}
[1.523433] (cpp_pubsub) StdoutLine: {'line': b"CMakeFiles/Makefile2:136: recipe for target 'CMakeFiles/listener.dir/all' failed\n"}
[1.602960] (-) TimerEvent: {}
[1.703369] (-) TimerEvent: {}
[1.803741] (-) TimerEvent: {}
[1.904100] (-) TimerEvent: {}
[2.004475] (-) TimerEvent: {}
[2.104784] (-) TimerEvent: {}
[2.205097] (-) TimerEvent: {}
[2.305510] (-) TimerEvent: {}
[2.405865] (-) TimerEvent: {}
[2.506424] (-) TimerEvent: {}
[2.607088] (-) TimerEvent: {}
[2.630865] (cpp_pubsub) StdoutLine: {'line': b'[ 75%] \x1b[32m\x1b[1mLinking CXX executable talker\x1b[0m\n'}
[2.707205] (-) TimerEvent: {}
[2.807511] (-) TimerEvent: {}
[2.839641] (cpp_pubsub) StdoutLine: {'line': b'[ 75%] Built target talker\n'}
[2.840786] (cpp_pubsub) StdoutLine: {'line': b"Makefile:140: recipe for target 'all' failed\n"}
[2.841055] (cpp_pubsub) StderrLine: {'line': b'make: *** [all] Error 2\n'}
[2.842764] (cpp_pubsub) CommandEnded: {'returncode': 2}
[2.889318] (cpp_pubsub) JobEnded: {'identifier': 'cpp_pubsub', 'rc': 2}
[2.900219] (-) EventReactorShutdown: {}
